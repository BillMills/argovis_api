openapi: 3.0.3
info:
  title: Argovis API
  description: "REST API for Argo profiles, platforms, selections, BGC data, gridded\
    \ products, etc."
  contact:
    name: Argovis Collaboration
    url: https://argovis.colorado.edu/
    email: tbd@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: "0.1"
externalDocs:
  description: Find us on GitHub
  url: https://github.com/argovis/argovis_api
servers:
- url: https://argovis.colorado.edu
  description: "Server Hosted by University of Colorado, Boulder"
- url: http://localhost:3001
  description: Local server for testing and development
security:
- name: []
tags:
- name: ar
  description: atmospheric river shapes
- name: covar
  description: Argo float position forcast product
- name: tc
  description: tropical cyclone data
- name: grid
  description: "Gridded products derived from Argo floats, simulation, or satalite\
    \ product"
- name: profiles
  description: "Profile data, including BGC and profile metadata"
- name: platforms
  description: Platform metadata
- name: dacs
  description: Summary and metadata for data assembly centers represented in the dataset
paths:
  /ar:
    get:
      tags:
      - ar
      summary: Find and filter atmo river shapes.
      operationId: findAR
      parameters:
      - name: date
        in: query
        description: three hour increments starting at 2004-01-01T00:00:00 and ending
          at 2017-04-02T03:00:00
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          format: date-time
          example: 2010-01-01T00:00:00Z
      - name: _id
        in: query
        description: ID of an atmospheric river object
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 1_262992
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/arShapeSchema'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Ar
  /covarGrid:
    get:
      tags:
      - covar
      summary: Probability distribution field for a float at point lat-lon after forcastDays.
      operationId: findCovar
      parameters:
      - name: lat
        in: query
        description: latitude (degrees) of Argo float location
        required: true
        style: form
        explode: true
        schema:
          maximum: 90
          minimum: -90
          type: number
          example: 5.25
      - name: lon
        in: query
        description: longitude (degrees) of Argo float location
        required: true
        style: form
        explode: true
        schema:
          maximum: 180
          minimum: -180
          type: number
          example: -20.33
      - name: forcastDays
        in: query
        description: number of days over which to project Argo float drift
        required: true
        style: form
        explode: true
        schema:
          maximum: 1800
          minimum: 60
          type: number
          example: 60
          enum:
          - 60
          - 120
          - 140
          - 240
          - 360
          - 480
          - 720
          - 840
          - 960
          - 1080
          - 1200
          - 1320
          - 1440
          - 1560
          - 1680
          - 1800
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CovarSchema'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Covar
  /covarSum:
    get:
      tags:
      - covar
      summary: Sum of probability distribution field over a region for a float starting
        at point lat-lon after forcastDays.
      operationId: sumCovar
      parameters:
      - name: lat
        in: query
        description: latitude (degrees) of Argo float location
        required: true
        style: form
        explode: true
        schema:
          maximum: 90
          minimum: -90
          type: number
          example: 5.25
      - name: lon
        in: query
        description: longitude (degrees) of Argo float location
        required: true
        style: form
        explode: true
        schema:
          maximum: 180
          minimum: -180
          type: number
          example: -20.33
      - name: forcastDays
        in: query
        description: number of days over which to project Argo float drift
        required: true
        style: form
        explode: true
        schema:
          maximum: 1800
          minimum: 60
          type: number
          example: 60
          enum:
          - 60
          - 120
          - 140
          - 240
          - 360
          - 480
          - 720
          - 840
          - 960
          - 1080
          - 1200
          - 1320
          - 1440
          - 1560
          - 1680
          - 1800
      - name: polygon
        in: query
        description: "array of [lon, lat] vertices describing a polygon bounding the\
          \ region of interest; final point must match initial point"
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          example: "[[-74.1,40.5],[-73.7,40.5],[-74.0,40.8],[-74.1,40.5]]"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Covar
  /tc:
    get:
      tags:
      - tc
      summary: Tropical cyclone search and filter.
      operationId: findTC
      parameters:
      - name: startDate
        in: query
        description: ISO 8601 UTC date-time formatted string indicating the beginning
          of the time period of interest.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          format: date-time
          example: 2010-01-01T00:00:00Z
      - name: endDate
        in: query
        description: ISO 8601 UTC date-time formatted string indicating the end of
          the time period of interest.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          format: date-time
          example: 2010-01-01T00:00:00Z
      - name: name
        in: query
        description: name of tropical cyclone
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: LANE
      - name: year
        in: query
        description: year of tropical cyclone
        required: false
        style: form
        explode: true
        schema:
          type: number
          example: 2018
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tcSchema'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Tc
  /tc/stormNameList:
    get:
      tags:
      - tc
      summary: returns a list of tropical cyclone names and years
      operationId: findStormNameList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Tc
  /grids:
    get:
      tags:
      - grid
      summary: gridded product selector
      operationId: gridselect
      parameters:
      - name: gridName
        in: query
        description: name of the gridded product to query.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: rgTempTotal
      - name: presRange
        in: query
        description: Pressure range in dbar to filter for; levels outside this range
          will not be returned.
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          example: "10,20.1"
          items:
            maxItems: 2
            minItems: 2
            type: number
      - name: polygon
        in: query
        description: "array of [lon, lat] vertices describing a polygon bounding the\
          \ region of interest; final point must match initial point"
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          example: "[[-74.1,40.5],[-73.7,40.5],[-74.0,40.8],[-74.1,40.5]]"
      - name: multipolygon
        in: query
        description: array of polygon regions; region of interest is taken as the
          intersection of all listed polygons.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          example: "[[[0,0],[0,1],[1,1],[1,0],[0,0]],[[0.5,0],[0.5,1],[1.5,1],[1.5,0],[0.5,0]]]"
      - name: startDate
        in: query
        description: ISO 8601 UTC date-time formatted string indicating the beginning
          of the time period of interest.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          format: date-time
          example: 2010-01-01T00:00:00Z
      - name: endDate
        in: query
        description: ISO 8601 UTC date-time formatted string indicating the end of
          the time period of interest.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          format: date-time
          example: 2010-01-01T00:00:00Z
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/columnGrid'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Grid
  /grids/vocabulary:
    get:
      tags:
      - grid
      summary: List all possible values for certain grid query string parameters
      operationId: gridVocab
      parameters:
      - name: parameter
        in: query
        description: /grids query string parameter to summarize possible values of.
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - gridName
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Grid
  /profiles:
    get:
      tags:
      - profiles
      summary: "Search, reduce and download profile data."
      operationId: profile
      parameters:
      - name: startDate
        in: query
        description: ISO 8601 UTC date-time formatted string indicating the beginning
          of the time period of interest.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          format: date-time
          example: 2010-01-01T00:00:00Z
      - name: endDate
        in: query
        description: ISO 8601 UTC date-time formatted string indicating the end of
          the time period of interest.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          format: date-time
          example: 2010-01-01T00:00:00Z
      - name: polygon
        in: query
        description: "array of [lon, lat] vertices describing a polygon bounding the\
          \ region of interest; final point must match initial point"
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          example: "[[-74.1,40.5],[-73.7,40.5],[-74.0,40.8],[-74.1,40.5]]"
      - name: box
        in: query
        description: "box region of interest described as [[lower left lon, lower\
          \ left lat], [upper right lon, upper right lat]]"
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          example: "[[-74.2,40.5],[-73.6,40.9]]"
      - name: center
        in: query
        description: center to measure max radius from when defining circular region
          of interest; must be used in conjunction with query string parameter 'radius'.
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          example: "10,20.1"
          items:
            maxItems: 2
            minItems: 2
            type: number
      - name: radius
        in: query
        description: km from centerpoint when defining circular region of interest;
          must be used in conjunction with query string parameter 'center'.
        required: false
        style: form
        explode: true
        schema:
          type: number
          example: 50
      - name: multipolygon
        in: query
        description: array of polygon regions; region of interest is taken as the
          intersection of all listed polygons.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          example: "[[[0,0],[0,1],[1,1],[1,0],[0,0]],[[0.5,0],[0.5,1],[1.5,1],[1.5,0],[0.5,0]]]"
      - name: id
        in: query
        description: Unique profile ID to search for.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 4902911_0
      - name: platform
        in: query
        description: Unique platform ID to search for.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "4902911"
      - name: presRange
        in: query
        description: Pressure range in dbar to filter for; levels outside this range
          will not be returned.
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          example: "10,20.1"
          items:
            maxItems: 2
            minItems: 2
            type: number
      - name: dac
        in: query
        description: Data Assembly Center to search for. See /profiles/vocabulary?parameter=dac
          for list of options.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: KO
      - name: source
        in: query
        description: Experimental program source(s) to search for; document must match
          all sources to be returned. Accepts ~ negation to filter out documents.
          See /profiles/vocabulary?parameter=source for list of options.
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          example: "argo_bgc,~argo_core"
          items:
            type: string
      - name: woceline
        in: query
        description: WOCE line to search for. See /profiles/vocabulary?parameter=woceline
          for list of options.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: A10
      - name: compression
        in: query
        description: Data compression strategy to apply.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: basic-minification
      - name: data
        in: query
        description: "Keys of data to include. Return only documents that have all\
          \ data requested, within the pressure range if specified. Accepts ~ negation\
          \ to filter out documents including the specified data. Omission of this\
          \ parameter will result in metadata only responses. See /profiles/vocabulary?parameter=data\
          \ for possible values."
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          example: "pres,doxy,~psal"
          items:
            $ref: '#/components/schemas/dataKey'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Profiles
  /profiles/listID:
    get:
      tags:
      - profiles
      summary: List profile IDs that match a search
      operationId: profileList
      parameters:
      - name: startDate
        in: query
        description: ISO 8601 UTC date-time formatted string indicating the beginning
          of the time period of interest.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          format: date-time
          example: 2010-01-01T00:00:00Z
      - name: endDate
        in: query
        description: ISO 8601 UTC date-time formatted string indicating the end of
          the time period of interest.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          format: date-time
          example: 2010-01-01T00:00:00Z
      - name: polygon
        in: query
        description: "array of [lon, lat] vertices describing a polygon bounding the\
          \ region of interest; final point must match initial point"
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          example: "[[-74.1,40.5],[-73.7,40.5],[-74.0,40.8],[-74.1,40.5]]"
      - name: box
        in: query
        description: "box region of interest described as [[lower left lon, lower\
          \ left lat], [upper right lon, upper right lat]]"
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          example: "[[-74.2,40.5],[-73.6,40.9]]"
      - name: center
        in: query
        description: center to measure max radius from when defining circular region
          of interest; must be used in conjunction with query string parameter 'radius'.
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          example: "10,20.1"
          items:
            maxItems: 2
            minItems: 2
            type: number
      - name: radius
        in: query
        description: km from centerpoint when defining circular region of interest;
          must be used in conjunction with query string parameter 'center'.
        required: false
        style: form
        explode: true
        schema:
          type: number
          example: 50
      - name: multipolygon
        in: query
        description: array of polygon regions; region of interest is taken as the
          intersection of all listed polygons.
        required: false
        style: form
        explode: true
        allowReserved: true
        schema:
          type: string
          example: "[[[0,0],[0,1],[1,1],[1,0],[0,0]],[[0.5,0],[0.5,1],[1.5,1],[1.5,0],[0.5,0]]]"
      - name: dac
        in: query
        description: Data Assembly Center to search for. See /profiles/vocabulary?parameter=dac
          for list of options.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: KO
      - name: source
        in: query
        description: Experimental program source(s) to search for; document must match
          all sources to be returned. Accepts ~ negation to filter out documents.
          See /profiles/vocabulary?parameter=source for list of options.
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          example: "argo_bgc,~argo_core"
          items:
            type: string
      - name: woceline
        in: query
        description: WOCE line to search for. See /profiles/vocabulary?parameter=woceline
          for list of options.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: A10
      - name: platform
        in: query
        description: Unique platform ID to search for.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "4902911"
      - name: presRange
        in: query
        description: Pressure range in dbar to filter for; levels outside this range
          will not be returned.
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          example: "10,20.1"
          items:
            maxItems: 2
            minItems: 2
            type: number
      - name: data
        in: query
        description: "Keys of data to include. Return only documents that have all\
          \ data requested, within the pressure range if specified. Accepts ~ negation\
          \ to filter out documents including the specified data. Omission of this\
          \ parameter will result in metadata only responses. See /profiles/vocabulary?parameter=data\
          \ for possible values."
        required: false
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          example: "pres,doxy,~psal"
          items:
            $ref: '#/components/schemas/dataKey'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Profiles
  /profiles/overview:
    get:
      tags:
      - profiles
      summary: Provides a summary of the profile database.
      operationId: profilesOverview
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profileCollectionSummary'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Profiles
  /profiles/vocabulary:
    get:
      tags:
      - profiles
      summary: List all possible values for certain profile query string parameters
      operationId: profileVocab
      parameters:
      - name: parameter
        in: query
        description: /profiles query string parameter to summarize possible values
          of.
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - data
          - woceline
          - dac
          - source
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Profiles
  /platforms:
    get:
      tags:
      - platforms
      summary: Provides metadata for a specified platform.
      operationId: platformMeta
      parameters:
      - name: platform
        in: query
        description: platform ID
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/platform'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/platformMeta'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Platforms
  /platforms/mostRecent:
    get:
      tags:
      - platforms
      summary: Provides a list of platforms with their most recent known report and
        position.
      operationId: platformList
      parameters:
      - name: platforms
        in: query
        description: List of platform IDs
        required: true
        style: form
        explode: false
        allowReserved: true
        schema:
          type: array
          example: "4902911,4902912"
          items:
            anyOf:
            - type: string
            - type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/platformRecent'
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Platforms
  /platforms/bgc:
    get:
      tags:
      - platforms
      summary: Provides a list of all Argo platform IDs with BGC data.
      operationId: platformBGC
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summary'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Platforms
  /dacs:
    get:
      tags:
      - dacs
      summary: Provides summary data for each data assembly center.
      operationId: dacSummary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summary'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
      x-swagger-router-controller: Dacs
components:
  schemas:
    arShapeSchema:
      required:
      - _id
      - date
      - date_formatted
      - geolocation
      - shapeId
      type: object
      properties:
        _id:
          type: string
        date:
          type: string
          format: date-time
        shapeId:
          type: integer
        geolocation:
          $ref: '#/components/schemas/geoJSONpolygon'
        date_formateed:
          type: string
          format: date
      example:
        date: 2000-01-23T04:56:07.000+00:00
        date_formateed: 2000-01-23
        shapeId: 0
        _id: _id
        geolocation:
          coordinates:
          - - 6.02745618307040320615897144307382404804229736328125
            - 6.02745618307040320615897144307382404804229736328125
          - - 6.02745618307040320615897144307382404804229736328125
            - 6.02745618307040320615897144307382404804229736328125
          type: type
    CovarSchema:
      required:
      - _id
      - dLat
      - dLong
      - features
      - forcastDays
      - geolocation
      type: object
      properties:
        features:
          type: array
          items:
            $ref: '#/components/schemas/CovarSchema_features'
        _id:
          type: string
        dLat:
          type: number
        dLong:
          type: number
        forcastDays:
          type: integer
        geolocation:
          $ref: '#/components/schemas/geoJSONpoint'
      example:
        features:
        - geometry:
            coordinates:
            - 0.80082819046101150206595775671303272247314453125
            - 0.80082819046101150206595775671303272247314453125
            type: type
          type: type
          properties: {}
        - geometry:
            coordinates:
            - 0.80082819046101150206595775671303272247314453125
            - 0.80082819046101150206595775671303272247314453125
            type: type
          type: type
          properties: {}
        dLat: 6.02745618307040320615897144307382404804229736328125
        dLong: 1.46581298050294517310021547018550336360931396484375
        _id: _id
        forcastDays: 5
        geolocation: null
    tcSchema:
      required:
      - _id
      - endDate
      - num
      - source
      - startDate
      - year
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        num:
          type: number
        source:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        year:
          type: number
        trajData:
          type: array
          items:
            $ref: '#/components/schemas/tcSchema_trajData'
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        year: 6.02745618307040320615897144307382404804229736328125
        num: 0.80082819046101150206595775671303272247314453125
        name: name
        _id: _id
        source: source
        trajData:
        - date: date
          pres: 7.061401241503109105224211816675961017608642578125
          season: 9.301444243932575517419536481611430644989013671875
          lon: 5.63737665663332876420099637471139430999755859375
          time: 1.46581298050294517310021547018550336360931396484375
          class: class
          lat: 5.962133916683182377482808078639209270477294921875
          wind: 2.3021358869347654518833223846741020679473876953125
          timestamp: 2000-01-23T04:56:07.000+00:00
          geolocation:
            coordinates:
            - 0.80082819046101150206595775671303272247314453125
            - 0.80082819046101150206595775671303272247314453125
            type: type
        - date: date
          pres: 7.061401241503109105224211816675961017608642578125
          season: 9.301444243932575517419536481611430644989013671875
          lon: 5.63737665663332876420099637471139430999755859375
          time: 1.46581298050294517310021547018550336360931396484375
          class: class
          lat: 5.962133916683182377482808078639209270477294921875
          wind: 2.3021358869347654518833223846741020679473876953125
          timestamp: 2000-01-23T04:56:07.000+00:00
          geolocation:
            coordinates:
            - 0.80082819046101150206595775671303272247314453125
            - 0.80082819046101150206595775671303272247314453125
            type: type
        startDate: 2000-01-23T04:56:07.000+00:00
    columnGrid:
      required:
      - _id
      - d
      - g
      - t
      type: object
      properties:
        _id:
          type: string
        g:
          $ref: '#/components/schemas/geoJSONpoint'
        t:
          type: string
          format: date-time
        d:
          type: array
          items:
            type: number
      example:
        t: 2000-01-23T04:56:07.000+00:00
        d:
        - 0.80082819046101150206595775671303272247314453125
        - 0.80082819046101150206595775671303272247314453125
        g:
          coordinates:
          - 0.80082819046101150206595775671303272247314453125
          - 0.80082819046101150206595775671303272247314453125
          type: type
        _id: _id
    Profile:
      required:
      - _id
      - basin
      - cycle_number
      - data_type
      - date_updated_argovis
      - geolocation
      - timestamp
      type: object
      properties:
        _id:
          type: string
        basin:
          type: number
        data_type:
          type: string
        doi:
          type: string
        geolocation:
          $ref: '#/components/schemas/geoJSONpoint'
        instrument:
          type: string
        data:
          type: array
          items:
            type: array
            items:
              type: number
        data_keys:
          type: array
          items:
            $ref: '#/components/schemas/dataKey'
        data_warning:
          type: array
          items:
            type: string
        timestamp:
          type: string
          format: date-time
        date_updated_argovis:
          type: string
          format: date-time
        pi_name:
          type: array
          items:
            type: string
        country:
          type: string
        data_center:
          type: string
        source_info:
          type: array
          items:
            $ref: '#/components/schemas/profile_source_info'
        profile_direction:
          type: string
        geolocation_argoqc:
          type: number
        timestamp_argoqc:
          type: number
        cycle_number:
          type: number
        fleetmonitoring:
          type: string
        oceanops:
          type: string
        data_keys_mode:
          type: object
        platform_id:
          type: string
        platform_type:
          type: string
        positioning_system:
          type: string
        vertical_sampling_scheme:
          type: string
        wmo_inst_type:
          type: string
      example:
        country: country
        geolocation_argoqc: 1.46581298050294517310021547018550336360931396484375
        data:
        - - 6.02745618307040320615897144307382404804229736328125
          - 6.02745618307040320615897144307382404804229736328125
        - - 6.02745618307040320615897144307382404804229736328125
          - 6.02745618307040320615897144307382404804229736328125
        pi_name:
        - pi_name
        - pi_name
        instrument: instrument
        date_updated_argovis: 2000-01-23T04:56:07.000+00:00
        data_warning:
        - data_warning
        - data_warning
        platform_type: platform_type
        fleetmonitoring: fleetmonitoring
        timestamp: 2000-01-23T04:56:07.000+00:00
        positioning_system: positioning_system
        data_keys_mode: {}
        data_center: data_center
        basin: 0.80082819046101150206595775671303272247314453125
        vertical_sampling_scheme: vertical_sampling_scheme
        cycle_number: 5.63737665663332876420099637471139430999755859375
        wmo_inst_type: wmo_inst_type
        data_type: data_type
        platform_id: platform_id
        timestamp_argoqc: 5.962133916683182377482808078639209270477294921875
        data_keys:
        - ""
        - ""
        _id: _id
        profile_direction: profile_direction
        oceanops: oceanops
        source_info:
        - source:
          - source
          - source
          data_keys_source:
          - data_keys_source
          - data_keys_source
          source_url: source_url
          date_updated_source: 2000-01-23T04:56:07.000+00:00
        - source:
          - source
          - source
          data_keys_source:
          - data_keys_source
          - data_keys_source
          source_url: source_url
          date_updated_source: 2000-01-23T04:56:07.000+00:00
        doi: doi
        geolocation:
          coordinates:
          - 0.80082819046101150206595775671303272247314453125
          - 0.80082819046101150206595775671303272247314453125
          type: type
    dataKey:
      type: string
      anyOf:
      - $ref: '#/components/schemas/argoDataKey'
      - $ref: '#/components/schemas/goshipDataKey'
    argoDataKey:
      pattern: "^((~)?((bbp470)|(bbp532)|(bbp700)|(bbp700_2)|(bisulfide)|(cdom)|(chla)|(cndc)|(cndx)|(cp660)|(down_irradiance380)|(down_irradiance412)|(down_irradiance442)|(down_irradiance443)|(down_irradiance490)|(down_irradiance555)|(down_irradiance670)|(downwelling_par)|(doxy)|(doxy2)|(doxy3)|(molar_doxy)|(nitrate)|(ph_in_situ_total)|(pres)|(psal)|(psal_sfile)|(temp)|(temp_sfile)|(turbidity)|(up_radiance412)|(up_radiance443)|(up_radiance490)|(up_radiance555){1})(_argoqc)?|all|metadata-only)$"
      type: string
    goshipDataKey:
      type: string
      enum:
      - ammonium_btl
      - ammonium_btl_woceqc
      - bottle_latitude_btl
      - bottle_longitude_btl
      - bottle_number_btl
      - bottle_number_btl_woceqc
      - bottle_time_btl
      - carbon_tetrachloride_btl
      - carbon_tetrachloride_btl_woceqc
      - cfc_113_btl
      - cfc_113_btl_woceqc
      - cfc_11_btl
      - cfc_11_btl_woceqc
      - cfc_12_btl
      - cfc_12_btl_woceqc
      - chlorophyll_a_btl
      - chlorophyll_a_btl_woceqc
      - chlorophyll_a_ug_kg_btl
      - chlorophyll_a_ug_kg_btl_woceqc
      - ctd_beamcp_ctd
      - ctd_beamcp_ctd_woceqc
      - ctd_fluor_arbitrary_ctd
      - ctd_fluor_ctd
      - ctd_fluor_ctd_woceqc
      - ctd_fluor_raw_btl
      - ctd_fluor_raw_btl_woceqc
      - ctd_fluor_raw_ctd
      - ctd_fluor_raw_ctd_woceqc
      - ctd_number_of_observations_ctd
      - ctd_pressure_raw_btl
      - ctd_temperature_unk_ctd
      - ctd_temperature_unk_ctd_woceqc
      - ctd_transmissometer_ctd
      - ctd_transmissometer_ctd_woceqc
      - ctd_transmissometer_raw_btl
      - ctd_transmissometer_raw_btl_woceqc
      - ctd_transmissometer_raw_ctd
      - ctd_transmissometer_raw_ctd_woceqc
      - del_carbon_13_dic_btl
      - del_carbon_13_dic_btl_woceqc
      - del_carbon_14_dic_btl
      - del_carbon_14_dic_btl_woceqc
      - del_carbon_14_dic_error_btl
      - del_oxygen_18_btl
      - del_oxygen_18_btl_woceqc
      - del_oxygen_18_error_btl
      - delta_helium_3_btl
      - delta_helium_3_btl_woceqc
      - delta_helium_3_error_btl
      - dissolved_organic_carbon_btl
      - dissolved_organic_carbon_btl_woceqc
      - dissolved_organic_nitrogen_btl
      - dissolved_organic_nitrogen_btl_woceqc
      - doxy_btl
      - doxy_btl_woceqc
      - doxy_ctd
      - doxy_ctd_woceqc
      - fco2_btl
      - fco2_btl_woceqc
      - fco2_temperature_btl
      - helium_btl
      - helium_btl_woceqc
      - helium_error_btl
      - hplc_placeholder_btl_woceqc
      - methyl_chloroform_btl
      - methyl_chloroform_btl_woceqc
      - neon_btl
      - neon_btl_woceqc
      - neon_error_btl
      - nitrate_btl
      - nitrate_btl_woceqc
      - nitrite_btl
      - nitrite_btl_woceqc
      - nitrite_nitrate_btl
      - nitrite_nitrate_btl_woceqc
      - nitrous_oxide_btl
      - nitrous_oxide_btl_woceqc
      - oxygen_btl
      - oxygen_btl_woceqc
      - oxygen_ml_l_btl
      - oxygen_ml_l_btl_woceqc
      - par_ctd
      - par_ctd_woceqc
      - partial_co2_temperature_btl
      - partial_pressure_of_co2_btl
      - partial_pressure_of_co2_btl_woceqc
      - particulate_organic_carbon_btl
      - particulate_organic_carbon_btl_woceqc
      - particulate_organic_nitrogen_btl
      - particulate_organic_nitrogen_btl_woceqc
      - ph_sws_btl
      - ph_sws_btl_woceqc
      - ph_temperature_btl
      - ph_total_h_scale_btl
      - ph_total_h_scale_btl_woceqc
      - phaeophytin_btl
      - phaeophytin_btl_woceqc
      - phaeophytin_ug_l_btl
      - phaeophytin_ug_l_btl_woceqc
      - phosphate_btl
      - phosphate_btl_woceqc
      - potential_temperature_68_btl
      - potential_temperature_c_btl
      - pres
      - psal_btl
      - psal_btl_woceqc
      - psal_ctd
      - psal_ctd_woceqc
      - radium_226_btl
      - radium_226_btl_woceqc
      - radium_228_btl
      - radium_228_btl_woceqc
      - ref_temperature_btl
      - ref_temperature_btl_woceqc
      - ref_temperature_c_btl
      - ref_temperature_c_btl_woceqc
      - rev_pressure_btl
      - rev_pressure_btl_woceqc
      - rev_temperature_90_btl
      - rev_temperature_90_btl_woceqc
      - rev_temperature_btl
      - rev_temperature_btl_woceqc
      - rev_temperature_c_btl
      - rev_temperature_c_btl_woceqc
      - salinity_btl
      - salinity_btl_woceqc
      - sample_btl
      - sample_ctd
      - silicate_btl
      - silicate_btl_woceqc
      - sulfur_hexifluoride_btl
      - sulfur_hexifluoride_btl_woceqc
      - temperature_btl
      - temperature_btl_woceqc
      - temperature_ctd
      - temperature_ctd_woceqc
      - total_alkalinity_btl
      - total_alkalinity_btl_woceqc
      - total_carbon_btl
      - total_carbon_btl_woceqc
      - total_dissolved_nitrogen_btl
      - total_dissolved_nitrogen_btl_woceqc
      - tritium_btl
      - tritium_btl_woceqc
      - tritium_error_btl
      - "~ammonium_btl"
      - "~ammonium_btl_woceqc"
      - "~bottle_latitude_btl"
      - "~bottle_longitude_btl"
      - "~bottle_number_btl"
      - "~bottle_number_btl_woceqc"
      - "~bottle_time_btl"
      - "~carbon_tetrachloride_btl"
      - "~carbon_tetrachloride_btl_woceqc"
      - "~cfc_113_btl"
      - "~cfc_113_btl_woceqc"
      - "~cfc_11_btl"
      - "~cfc_11_btl_woceqc"
      - "~cfc_12_btl"
      - "~cfc_12_btl_woceqc"
      - "~chlorophyll_a_btl"
      - "~chlorophyll_a_btl_woceqc"
      - "~chlorophyll_a_ug_kg_btl"
      - "~chlorophyll_a_ug_kg_btl_woceqc"
      - "~ctd_beamcp_ctd"
      - "~ctd_beamcp_ctd_woceqc"
      - "~ctd_fluor_arbitrary_ctd"
      - "~ctd_fluor_ctd"
      - "~ctd_fluor_ctd_woceqc"
      - "~ctd_fluor_raw_btl"
      - "~ctd_fluor_raw_btl_woceqc"
      - "~ctd_fluor_raw_ctd"
      - "~ctd_fluor_raw_ctd_woceqc"
      - "~ctd_number_of_observations_ctd"
      - "~ctd_pressure_raw_btl"
      - "~ctd_temperature_unk_ctd"
      - "~ctd_temperature_unk_ctd_woceqc"
      - "~ctd_transmissometer_ctd"
      - "~ctd_transmissometer_ctd_woceqc"
      - "~ctd_transmissometer_raw_btl"
      - "~ctd_transmissometer_raw_btl_woceqc"
      - "~ctd_transmissometer_raw_ctd"
      - "~ctd_transmissometer_raw_ctd_woceqc"
      - "~del_carbon_13_dic_btl"
      - "~del_carbon_13_dic_btl_woceqc"
      - "~del_carbon_14_dic_btl"
      - "~del_carbon_14_dic_btl_woceqc"
      - "~del_carbon_14_dic_error_btl"
      - "~del_oxygen_18_btl"
      - "~del_oxygen_18_btl_woceqc"
      - "~del_oxygen_18_error_btl"
      - "~delta_helium_3_btl"
      - "~delta_helium_3_btl_woceqc"
      - "~delta_helium_3_error_btl"
      - "~dissolved_organic_carbon_btl"
      - "~dissolved_organic_carbon_btl_woceqc"
      - "~dissolved_organic_nitrogen_btl"
      - "~dissolved_organic_nitrogen_btl_woceqc"
      - "~doxy_btl"
      - "~doxy_btl_woceqc"
      - "~doxy_ctd"
      - "~doxy_ctd_woceqc"
      - "~fco2_btl"
      - "~fco2_btl_woceqc"
      - "~fco2_temperature_btl"
      - "~helium_btl"
      - "~helium_btl_woceqc"
      - "~helium_error_btl"
      - "~hplc_placeholder_btl_woceqc"
      - "~methyl_chloroform_btl"
      - "~methyl_chloroform_btl_woceqc"
      - "~neon_btl"
      - "~neon_btl_woceqc"
      - "~neon_error_btl"
      - "~nitrate_btl"
      - "~nitrate_btl_woceqc"
      - "~nitrite_btl"
      - "~nitrite_btl_woceqc"
      - "~nitrite_nitrate_btl"
      - "~nitrite_nitrate_btl_woceqc"
      - "~nitrous_oxide_btl"
      - "~nitrous_oxide_btl_woceqc"
      - "~oxygen_btl"
      - "~oxygen_btl_woceqc"
      - "~oxygen_ml_l_btl"
      - "~oxygen_ml_l_btl_woceqc"
      - "~par_ctd"
      - "~par_ctd_woceqc"
      - "~partial_co2_temperature_btl"
      - "~partial_pressure_of_co2_btl"
      - "~partial_pressure_of_co2_btl_woceqc"
      - "~particulate_organic_carbon_btl"
      - "~particulate_organic_carbon_btl_woceqc"
      - "~particulate_organic_nitrogen_btl"
      - "~particulate_organic_nitrogen_btl_woceqc"
      - "~ph_sws_btl"
      - "~ph_sws_btl_woceqc"
      - "~ph_temperature_btl"
      - "~ph_total_h_scale_btl"
      - "~ph_total_h_scale_btl_woceqc"
      - "~phaeophytin_btl"
      - "~phaeophytin_btl_woceqc"
      - "~phaeophytin_ug_l_btl"
      - "~phaeophytin_ug_l_btl_woceqc"
      - "~phosphate_btl"
      - "~phosphate_btl_woceqc"
      - "~potential_temperature_68_btl"
      - "~potential_temperature_c_btl"
      - "~pres"
      - "~psal_btl"
      - "~psal_btl_woceqc"
      - "~psal_ctd"
      - "~psal_ctd_woceqc"
      - "~radium_226_btl"
      - "~radium_226_btl_woceqc"
      - "~radium_228_btl"
      - "~radium_228_btl_woceqc"
      - "~ref_temperature_btl"
      - "~ref_temperature_btl_woceqc"
      - "~ref_temperature_c_btl"
      - "~ref_temperature_c_btl_woceqc"
      - "~rev_pressure_btl"
      - "~rev_pressure_btl_woceqc"
      - "~rev_temperature_90_btl"
      - "~rev_temperature_90_btl_woceqc"
      - "~rev_temperature_btl"
      - "~rev_temperature_btl_woceqc"
      - "~rev_temperature_c_btl"
      - "~rev_temperature_c_btl_woceqc"
      - "~salinity_btl"
      - "~salinity_btl_woceqc"
      - "~sample_btl"
      - "~sample_ctd"
      - "~silicate_btl"
      - "~silicate_btl_woceqc"
      - "~sulfur_hexifluoride_btl"
      - "~sulfur_hexifluoride_btl_woceqc"
      - "~temperature_btl"
      - "~temperature_btl_woceqc"
      - "~temperature_ctd"
      - "~temperature_ctd_woceqc"
      - "~total_alkalinity_btl"
      - "~total_alkalinity_btl_woceqc"
      - "~total_carbon_btl"
      - "~total_carbon_btl_woceqc"
      - "~total_dissolved_nitrogen_btl"
      - "~total_dissolved_nitrogen_btl_woceqc"
      - "~tritium_btl"
      - "~tritium_btl_woceqc"
      - "~tritium_error_btl"
    platformMeta:
      type: object
      properties:
        _id:
          anyOf:
          - type: string
          - type: number
        platform_number:
          anyOf:
          - type: string
          - type: number
        most_recent_date:
          type: string
          format: date-time
        most_recent_date_added:
          type: string
          format: date-time
        number_of_profiles:
          type: integer
        POSITIONING_SYSTEM:
          type: string
        PI_NAME:
          type: string
        dac:
          type: string
      example:
        PI_NAME: PI_NAME
        most_recent_date: 2000-01-23T04:56:07.000+00:00
        most_recent_date_added: 2000-01-23T04:56:07.000+00:00
        dac: dac
        platform_number: ""
        number_of_profiles: 0
        POSITIONING_SYSTEM: POSITIONING_SYSTEM
        _id: ""
    platformRecent:
      type: object
      properties:
        _id:
          anyOf:
          - type: string
          - type: number
        platform_number:
          anyOf:
          - type: string
          - type: number
        most_recent_date:
          type: string
          format: date-time
        number_of_profiles:
          type: integer
        cycle_number:
          type: integer
        geolocation:
          $ref: '#/components/schemas/geoJSONpoint'
        dac:
          type: string
      example:
        cycle_number: 6
        most_recent_date: 2000-01-23T04:56:07.000+00:00
        dac: dac
        platform_number: ""
        number_of_profiles: 0
        _id: ""
        geolocation:
          coordinates:
          - 0.80082819046101150206595775671303272247314453125
          - 0.80082819046101150206595775671303272247314453125
          type: type
    summary:
      type: object
      properties:
        _id:
          type: string
        summary:
          type: object
      example:
        summary: {}
        _id: _id
    profileCollectionSummary:
      type: object
      properties:
        numberOfProfiles:
          type: integer
        dacs:
          type: array
          items:
            type: string
        numberDeep:
          type: integer
        numberBgc:
          type: integer
        lastAdded:
          type: string
          format: date-time
      example:
        numberBgc: 1
        dacs:
        - dacs
        - dacs
        lastAdded: 2000-01-23T04:56:07.000+00:00
        numberDeep: 6
        numberOfProfiles: 0
    geoJSONpoint:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
        coordinates:
          type: array
          items:
            maxItems: 2
            minItems: 2
            type: number
      example:
        coordinates:
        - 0.80082819046101150206595775671303272247314453125
        - 0.80082819046101150206595775671303272247314453125
        type: type
    geoJSONpolygon:
      type: object
      properties:
        type:
          type: string
        coordinates:
          type: array
          items:
            type: array
            items:
              maxItems: 2
              minItems: 2
              type: number
      example:
        coordinates:
        - - 6.02745618307040320615897144307382404804229736328125
          - 6.02745618307040320615897144307382404804229736328125
        - - 6.02745618307040320615897144307382404804229736328125
          - 6.02745618307040320615897144307382404804229736328125
        type: type
    profile_source_info:
      required:
      - source
      type: object
      properties:
        data_keys_source:
          type: array
          items:
            type: string
        source:
          type: array
          items:
            type: string
        source_url:
          type: string
        date_updated_source:
          type: string
          format: date-time
      example:
        source:
        - source
        - source
        data_keys_source:
        - data_keys_source
        - data_keys_source
        source_url: source_url
        date_updated_source: 2000-01-23T04:56:07.000+00:00
    errorResponse:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    inline_response_200:
      required:
      - sum
      type: object
      properties:
        sum:
          type: integer
      example:
        sum: 0
    platform:
      example: "4902911"
      anyOf:
      - type: string
      - type: number
    CovarSchema_features:
      type: object
      properties:
        geometry:
          $ref: '#/components/schemas/geoJSONpoint'
        type:
          type: string
        properties:
          type: object
      example:
        geometry:
          coordinates:
          - 0.80082819046101150206595775671303272247314453125
          - 0.80082819046101150206595775671303272247314453125
          type: type
        type: type
        properties: {}
    tcSchema_trajData:
      required:
      - class
      - date
      - geolocation
      - lat
      - lon
      - time
      - timestamp
      type: object
      properties:
        date:
          type: string
        time:
          type: number
        class:
          type: string
        lat:
          type: number
        lon:
          type: number
        wind:
          type: number
        pres:
          type: number
        season:
          type: number
        timestamp:
          type: string
          format: date-time
        geolocation:
          $ref: '#/components/schemas/geoJSONpoint'
      example:
        date: date
        pres: 7.061401241503109105224211816675961017608642578125
        season: 9.301444243932575517419536481611430644989013671875
        lon: 5.63737665663332876420099637471139430999755859375
        time: 1.46581298050294517310021547018550336360931396484375
        class: class
        lat: 5.962133916683182377482808078639209270477294921875
        wind: 2.3021358869347654518833223846741020679473876953125
        timestamp: 2000-01-23T04:56:07.000+00:00
        geolocation:
          coordinates:
          - 0.80082819046101150206595775671303272247314453125
          - 0.80082819046101150206595775671303272247314453125
          type: type
  responses:
    badRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    notFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    serverError:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
  parameters:
    arDate:
      name: date
      in: query
      description: three hour increments starting at 2004-01-01T00:00:00 and ending
        at 2017-04-02T03:00:00
      required: false
      style: form
      explode: true
      allowReserved: true
      schema:
        type: string
        format: date-time
        example: 2010-01-01T00:00:00Z
    arID:
      name: _id
      in: query
      description: ID of an atmospheric river object
      required: false
      style: form
      explode: true
      schema:
        type: string
        example: 1_262992
    date:
      name: date
      in: query
      description: date-time formatted string
      required: true
      style: form
      explode: true
      allowReserved: true
      schema:
        type: string
        format: date-time
        example: 2010-01-01T00:00:00Z
    startDate:
      name: startDate
      in: query
      description: ISO 8601 UTC date-time formatted string indicating the beginning
        of the time period of interest.
      required: false
      style: form
      explode: true
      allowReserved: true
      schema:
        type: string
        format: date-time
        example: 2010-01-01T00:00:00Z
    endDate:
      name: endDate
      in: query
      description: ISO 8601 UTC date-time formatted string indicating the end of the
        time period of interest.
      required: false
      style: form
      explode: true
      allowReserved: true
      schema:
        type: string
        format: date-time
        example: 2010-01-01T00:00:00Z
    gridName:
      name: gridName
      in: query
      description: name of the gridded product to query.
      required: true
      style: form
      explode: true
      schema:
        type: string
        example: rgTempTotal
    presRange:
      name: presRange
      in: query
      description: Pressure range in dbar to filter for; levels outside this range
        will not be returned.
      required: false
      style: form
      explode: false
      allowReserved: true
      schema:
        type: array
        example: "10,20.1"
        items:
          maxItems: 2
          minItems: 2
          type: number
    dac:
      name: dac
      in: query
      description: Data Assembly Center to search for. See /profiles/vocabulary?parameter=dac
        for list of options.
      required: false
      style: form
      explode: true
      schema:
        type: string
        example: KO
    profileSource:
      name: source
      in: query
      description: Experimental program source(s) to search for; document must match
        all sources to be returned. Accepts ~ negation to filter out documents. See
        /profiles/vocabulary?parameter=source for list of options.
      required: false
      style: form
      explode: false
      allowReserved: true
      schema:
        type: array
        example: "argo_bgc,~argo_core"
        items:
          type: string
    woceline:
      name: woceline
      in: query
      description: WOCE line to search for. See /profiles/vocabulary?parameter=woceline
        for list of options.
      required: false
      style: form
      explode: true
      schema:
        type: string
        example: A10
    compression:
      name: compression
      in: query
      description: Data compression strategy to apply.
      required: false
      style: form
      explode: true
      schema:
        type: string
        example: basic-minification
    profileID:
      name: id
      in: query
      description: Unique profile ID to search for.
      required: false
      style: form
      explode: true
      schema:
        type: string
        example: 4902911_0
    profilePlatform:
      name: platform
      in: query
      description: Unique platform ID to search for.
      required: false
      style: form
      explode: true
      schema:
        type: string
        example: "4902911"
    platformList:
      name: platforms
      in: query
      description: List of platform IDs
      required: true
      style: form
      explode: false
      allowReserved: true
      schema:
        type: array
        example: "4902911,4902912"
        items:
          anyOf:
          - type: string
          - type: number
    polygon:
      name: polygon
      in: query
      description: "array of [lon, lat] vertices describing a polygon bounding the\
        \ region of interest; final point must match initial point"
      required: false
      style: form
      explode: true
      allowReserved: true
      schema:
        type: string
        example: "[[-74.1,40.5],[-73.7,40.5],[-74.0,40.8],[-74.1,40.5]]"
    multipolygon:
      name: multipolygon
      in: query
      description: array of polygon regions; region of interest is taken as the intersection
        of all listed polygons.
      required: false
      style: form
      explode: true
      allowReserved: true
      schema:
        type: string
        example: "[[[0,0],[0,1],[1,1],[1,0],[0,0]],[[0.5,0],[0.5,1],[1.5,1],[1.5,0],[0.5,0]]]"
    box:
      name: box
      in: query
      description: "box region of interest described as [[lower left lon, lower left\
        \ lat], [upper right lon, upper right lat]]"
      required: false
      style: form
      explode: true
      allowReserved: true
      schema:
        type: string
        example: "[[-74.2,40.5],[-73.6,40.9]]"
    center:
      name: center
      in: query
      description: center to measure max radius from when defining circular region
        of interest; must be used in conjunction with query string parameter 'radius'.
      required: false
      style: form
      explode: false
      allowReserved: true
      schema:
        type: array
        example: "10,20.1"
        items:
          maxItems: 2
          minItems: 2
          type: number
    radius:
      name: radius
      in: query
      description: km from centerpoint when defining circular region of interest;
        must be used in conjunction with query string parameter 'center'.
      required: false
      style: form
      explode: true
      schema:
        type: number
        example: 50
    data:
      name: data
      in: query
      description: "Keys of data to include. Return only documents that have all data\
        \ requested, within the pressure range if specified. Accepts ~ negation to\
        \ filter out documents including the specified data. Omission of this parameter\
        \ will result in metadata only responses. See /profiles/vocabulary?parameter=data\
        \ for possible values."
      required: false
      style: form
      explode: false
      allowReserved: true
      schema:
        type: array
        example: "pres,doxy,~psal"
        items:
          $ref: '#/components/schemas/dataKey'
    platform:
      name: platform
      in: query
      description: platform ID
      required: true
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/platform'
    lat:
      name: lat
      in: query
      description: latitude (degrees) of Argo float location
      required: true
      style: form
      explode: true
      schema:
        maximum: 90
        minimum: -90
        type: number
        example: 5.25
    lon:
      name: lon
      in: query
      description: longitude (degrees) of Argo float location
      required: true
      style: form
      explode: true
      schema:
        maximum: 180
        minimum: -180
        type: number
        example: -20.33
    forcastDays:
      name: forcastDays
      in: query
      description: number of days over which to project Argo float drift
      required: true
      style: form
      explode: true
      schema:
        maximum: 1800
        minimum: 60
        type: number
        example: 60
        enum:
        - 60
        - 120
        - 140
        - 240
        - 360
        - 480
        - 720
        - 840
        - 960
        - 1080
        - 1200
        - 1320
        - 1440
        - 1560
        - 1680
        - 1800
