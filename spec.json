{
   "openapi": "3.0.3",
   "info": {
      "title": "Argovis API",
      "description": "REST API for Argo profiles, platforms, selections, BGC data, gridded products, etc.",
      "contact": {
         "name": "Argovis Collaboration",
         "email": "tbd@example.com",
         "url": "https://argovis.colorado.edu/"
      },
      "license": {
         "name": "MIT",
         "url": "https://opensource.org/licenses/MIT"
      },
      "version": "0.1"
   },
   "externalDocs": {
      "description": "Find us on GitHub",
      "url": "https://github.com/argovis/argovis_api"
   },
   "servers": [
      {
         "url": "https://argovis.colorado.edu",
         "description": "Server Hosted by University of Colorado, Boulder"
      },
      {
         "url": "http://localhost:3001",
         "description": "Local server for testing and development"
      }
   ],
   "security": [
      {
         "name": []
      }
   ],
   "tags": [
      {
         "name": "ar",
         "description": "atmospheric river shapes"
      },
      {
         "name": "covar",
         "description": "Argo float position forcast product"
      },
      {
         "name": "tc",
         "description": "tropical cyclone data"
      },
      {
         "name": "grid",
         "description": "Gridded products derived from Argo floats, simulation, or satalite product"
      },
      {
         "name": "profiles",
         "description": "Profile data, including BGC and profile metadata"
      },
      {
         "name": "platforms",
         "description": "Platform metadata"
      },
      {
         "name": "dacs",
         "description": "Summary and metadata for data assembly centers represented in the dataset"
      }
   ],
   "paths": {
      "/ar": {
         "get": {
            "tags": [
               "ar"
            ],
            "summary": "Find and filter atmo river shapes.",
            "operationId": "findAR",   
            "parameters": [
               {
                  "$ref": "#/components/parameters/arDate"
               },
               {
                  "$ref": "#/components/parameters/arID"
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/arShapeSchema"
                           }
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/covarGrid": {
         "get": {
            "tags": [
               "covar"
            ],
            "summary": "Probability distribution field for a float at point lat-lon after forcastDays.",
            "operationId": "findCovar",
            "parameters": [
               {
                  "$ref": "#/components/parameters/lat"
               },
               {
                  "$ref": "#/components/parameters/lon"
               },
               {
                  "$ref": "#/components/parameters/forcastDays"
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/CovarSchema"
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/covarSum": {
         "get": {
            "tags": [
               "covar"
            ],
            "summary": "Sum of probability distribution field over a region for a float starting at point lat-lon after forcastDays.",
            "operationId": "sumCovar",
            "parameters": [
               {
                  "$ref": "#/components/parameters/lat"
               },
               {
                  "$ref": "#/components/parameters/lon"
               },
               {
                  "$ref": "#/components/parameters/forcastDays"
               },
               {
                  "$ref": "#/components/parameters/polygon"
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "required": [
                              "sum"
                           ],
                           "properties": {
                              "sum": {
                                 "type": "integer"
                              }
                           }
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/tc": {
         "get": {
            "tags": [
               "tc"
            ],
            "summary": "Tropical cyclone search and filter.",
            "operationId": "findTC",
            "parameters": [
               {
                  "$ref": "#/components/parameters/startDate"
               },
               {
                  "$ref": "#/components/parameters/endDate"
               },
               {
                  "name": "name",
                  "in": "query",
                  "required": false,
                  "description": "name of tropical cyclone",
                  "schema": {
                     "type": "string",
                     "example": "LANE"
                  }
               },
               {
                  "name": "year",
                  "in": "query",
                  "required": false,
                  "description": "year of tropical cyclone",
                  "schema": {
                     "type": "number",
                     "example": 2018
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/tcSchema"
                           }
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/tc/stormNameList": {
         "get": {
            "tags": [
               "tc"
            ],
            "summary": "returns a list of tropical cyclone names and years",
            "operationId": "findStormNameList",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "type": "string"
                           }
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/grids":{
         "get": {
            "tags": [
               "grid"
            ],
            "summary": "gridded product selector",
            "operationId": "gridselect",
            "parameters": [
               {
                  "$ref": "#/components/parameters/gridName"
               },
               {
                  "$ref": "#/components/parameters/presRange"
               },
               {
                  "$ref": "#/components/parameters/polygon"
               },
               {
                  "$ref": "#/components/parameters/multipolygon"
               },
               {
                  "$ref": "#/components/parameters/startDate"
               },
               {
                  "$ref": "#/components/parameters/endDate"
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/columnGrid"
                           }
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/grids/vocabulary": {
         "get": {
            "tags": [
               "grid"
            ],
            "summary": "List all possible values for certain grid query string parameters",
            "operationId": "gridVocab",
            "parameters": [
               {
                  "in": "query",
                  "name": "parameter",
                  "required": true,
                  "description": "/grids query string parameter to summarize possible values of.",
                  "schema": {
                     "type": "string",
                     "enum": ["gridName"]
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "type": "string"
                           }
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/profiles": {
         "get": {
            "tags": [
               "profiles"
            ],
            "summary": "Search, reduce and download profile data.",
            "operationId": "profile",
            "parameters": [
               {
                  "$ref": "#/components/parameters/startDate"
               },
               {
                  "$ref": "#/components/parameters/endDate"
               },
               {
                  "$ref": "#/components/parameters/polygon"
               },
               {
                  "$ref": "#/components/parameters/box"
               },
               {
                  "$ref": "#/components/parameters/center"
               },
               {
                  "$ref": "#/components/parameters/radius"
               },
               {
                  "$ref": "#/components/parameters/multipolygon"
               },
               {
                  "$ref": "#/components/parameters/profileID"
               },
               {
                  "$ref": "#/components/parameters/profilePlatform"
               },
               {
                  "$ref": "#/components/parameters/presRange"
               },
               {
                  "$ref": "#/components/parameters/dac"
               },
               {
                  "$ref": "#/components/parameters/profileSource" 
               },
               {
                  "$ref": "#/components/parameters/woceline" 
               },
               {
                  "$ref": "#/components/parameters/compression"
               },
               {
                  "$ref": "#/components/parameters/data"
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/Profile"
                           }
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/profiles/listID": {
         "get": {
            "tags": [
               "profiles"
            ],
            "summary": "List profile IDs that match a search",
            "operationId": "profileList",
            "parameters": [
               {
                  "$ref": "#/components/parameters/startDate"
               },
               {
                  "$ref": "#/components/parameters/endDate"
               },
               {
                  "$ref": "#/components/parameters/polygon"
               },
               {
                  "$ref": "#/components/parameters/box"
               },
               {
                  "$ref": "#/components/parameters/center"
               },
               {
                  "$ref": "#/components/parameters/radius"
               },
               {
                  "$ref": "#/components/parameters/multipolygon"
               },
               {
                  "$ref": "#/components/parameters/dac"
               },
               {
                  "$ref": "#/components/parameters/profileSource" 
               },
               {
                  "$ref": "#/components/parameters/woceline" 
               },
               {
                  "$ref": "#/components/parameters/profilePlatform"
               },
               {
                  "$ref": "#/components/parameters/presRange"
               },
               {
                  "$ref": "#/components/parameters/data"
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "type": "string"
                           }
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/profiles/overview": {
         "get": {
            "tags": [
               "profiles"
            ],
            "summary": "Provides a summary of the profile database.",
            "operationId": "profilesOverview",
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/profileCollectionSummary"
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/profiles/vocabulary": {
         "get": {
            "tags": [
               "profiles"
            ],
            "summary": "List all possible values for certain profile query string parameters",
            "operationId": "profileVocab",
            "parameters": [
               {
                  "in": "query",
                  "name": "parameter",
                  "required": true,
                  "description": "/profiles query string parameter to summarize possible values of.",
                  "schema": {
                     "type": "string",
                     "enum": ["data", "woceline", "dac", "source"]
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "type": "string"
                           }
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/platforms": {
         "get": {
            "tags": [
               "platforms"
            ],
            "summary": "Provides metadata for a specified platform.",
            "operationId": "platformMeta",
            "parameters": [
               {
                  "$ref": "#/components/parameters/platform"
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/platformMeta"
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      },
      "/platforms/mostRecent": {
         "get": {
            "tags": [
               "platforms"
            ],
            "summary": "Provides a list of platforms with their most recent known report and position.",
            "operationId": "platformList",
            "parameters": [
               {
                  "$ref": "#/components/parameters/platformList"
               }
            ],
            "responses": {
               "200": {
                  "description": "OK",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/platformRecent"
                           }
                        }
                     }
                  }
               },
               "400": {
                  "$ref": "#/components/responses/badRequest"
               },
               "404": {
                  "$ref": "#/components/responses/notFound"
               },
               "500": {
                  "$ref": "#/components/responses/serverError"
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "arShapeSchema": {
            "type": "object",
            "required": [
               "_id",
               "date",
               "shapeId",
               "geolocation",
               "date_formatted"
            ],
            "properties": {
               "_id": {
                  "type": "string"
               },
               "date": {
                  "type": "string",
                  "format": "date-time"
               },
               "shapeId": {
                  "type": "integer"
               },
               "geolocation": {
                  "$ref": "#/components/schemas/geoJSONpolygon"
               },
               "date_formateed": {
                  "type": "string",
                  "format": "date"
               }
            }
         },
         "CovarSchema": {
            "type": "object",
            "required": [
               "_id",
               "features",
               "dLat",
               "forcastDays",
               "dLong",
               "geolocation"
            ],
            "properties": {
               "features": {
                  "type": "array",
                  "items": {
                     "type": "object",
                     "properties": {
                        "geometry": {
                           "$ref": "#/components/schemas/geoJSONpoint"
                        },
                        "type": {
                           "type": "string"
                        },
                        "properties": {
                           "type": "object",
                           "Probability": "number"
                        }
                     }
                  }
               },
               "_id": {
                  "type": "string"
               },
               "dLat": {
                  "type": "number"
               },
               "dLong": {
                  "type": "number"
               },
               "forcastDays": {
                  "type": "integer"
               },
               "geolocation": {
                  "$ref": "#/components/schemas/geoJSONpoint"
               }
            }
         },
         "tcSchema": {
            "type": "object",
            "required": [
               "_id",
               "num",
               "source",
               "startDate",
               "endDate",
               "year"
            ],
            "properties": {
               "_id": {
                  "type": "string"
               },
               "name": {
                  "type": "string"
               },
               "num": {
                  "type": "number"
               },
               "source": {
                  "type": "string"
               },
               "startDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "endDate": {
                  "type": "string",
                  "format": "date-time"
               },
               "year": {
                  "type": "number"
               },
               "trajData": {
                  "type": "array",
                  "items": {
                     "type": "object",
                     "required": [
                        "date",
                        "time",
                        "class",
                        "lat",
                        "lon",
                        "timestamp",
                        "geolocation"
                     ],
                     "properties": {
                        "date": {
                           "type": "string"
                        },
                        "time": {
                           "type": "number"
                        },
                        "class": {
                           "type": "string"
                        },
                        "lat": {
                           "type": "number"
                        },
                        "lon": {
                           "type": "number"
                        },
                        "wind": {
                           "type": "number"
                        },
                        "pres": {
                           "type": "number"
                        },
                        "season": {
                           "type": "number"
                        },
                        "timestamp": {
                           "type": "string",
                           "format": "date-time"
                        },
                        "geolocation": {
                           "$ref": "#/components/schemas/geoJSONpoint"
                        }
                     }
                  }
               }
            }
         },
         "columnGrid": {
            "type": "object",
            "required": ["_id", "g", "t", "d"],
            "properties": {
               "_id": {
                  "type": "string"
               },
               "g": {
                   "$ref": "#/components/schemas/geoJSONpoint"
               },
               "t": {
                  "type": "string",
                  "format": "date-time"
               },
               "d": {
                  "type": "array",
                  "items": {
                     "type": "number"
                  }
               }
            }
         },
         "Profile": {
            "type": "object",
            "required": [
               "_id",
               "basin",
               "data_type",
               "date_updated_argovis",
               "geolocation",
               "timestamp",
               "cycle_number"
            ],
            "properties": {
               "_id": {
                  "type": "string"
               },
               "basin": {
                  "type": "number"
               },
               "data_type": {
                  "type": "string"
               },
               "doi": {
                  "type": "string"
               },
               "geolocation": {
                   "$ref": "#/components/schemas/geoJSONpoint"
               },
                "instrument": {
                  "type": "string"
               },
               "data": {
                  "type": "array",
                  "items": {
                     "type": "array",
                     "items": {
                        "type": "number"
                     }
                  }          
               },
               "data_keys": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/dataKey"
                  }
               },
               "data_warning": {
                  "type": "array",
                  "items": {
                     "type": "string"
                  }
               },
               "timestamp": {
                  "type": "string",
                  "format": "date-time"
               },
               "date_updated_argovis": {
                  "type": "string",
                  "format": "date-time"
               },
               "pi_name": {
                  "type": "array",
                  "items": {
                     "type": "string"
                  }
               },
               "country": {
                  "type": "string"
               },
               "data_center": {
                  "type": "string"
               },
               "source_info": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/profile_source_info"
                  }
               },
               "profile_direction": {
                  "type": "string"
               },
               "geolocation_argoqc": {
                  "type": "number"
               },
               "timestamp_argoqc": {
                  "type": "number"
               },
               "cycle_number": {
                  "type": "number"
               },
               "fleetmonitoring": {
                  "type": "string"
               },
               "oceanops": {
                  "type": "string"
               },
               "data_keys_mode": {
                  "type": "object"
               },
               "platform_id":{
                  "type": "string"
               },
               "platform_type": {
                  "type": "string"
               },
               "positioning_system": {
                  "type": "string"
               },
               "vertical_sampling_scheme": {
                  "type": "string"
               },
               "wmo_inst_type": {
                  "type": "string"
               }
            }
         },
         "dataKey":{
            "type": "string",
            "anyOf": [
               {
                  "$ref": "#/components/schemas/argoDataKey"
               },
               {
                  "$ref": "#/components/schemas/goshipDataKey"
               }
            ] 
         },
         "argoDataKey": {
            "type": "string",
            "pattern": "^((~)?((bbp470)|(bbp532)|(bbp700)|(bbp700_2)|(bisulfide)|(cdom)|(chla)|(cndc)|(cndx)|(cp660)|(down_irradiance380)|(down_irradiance412)|(down_irradiance442)|(down_irradiance443)|(down_irradiance490)|(down_irradiance555)|(down_irradiance670)|(downwelling_par)|(doxy)|(doxy2)|(doxy3)|(molar_doxy)|(nitrate)|(ph_in_situ_total)|(pres)|(psal)|(psal_sfile)|(temp)|(temp_sfile)|(turbidity)|(up_radiance412)|(up_radiance443)|(up_radiance490)|(up_radiance555){1})(_argoqc)?|all|metadata-only)$"
         },
         "goshipDataKey": {
            "type": "string",
            "enum": [
               "ammonium_btl",
               "ammonium_btl_woceqc",
               "bottle_latitude_btl",
               "bottle_longitude_btl",
               "bottle_number_btl",
               "bottle_number_btl_woceqc",
               "bottle_time_btl",
               "carbon_tetrachloride_btl",
               "carbon_tetrachloride_btl_woceqc",
               "cfc_113_btl",
               "cfc_113_btl_woceqc",
               "cfc_11_btl",
               "cfc_11_btl_woceqc",
               "cfc_12_btl",
               "cfc_12_btl_woceqc",
               "chlorophyll_a_btl",
               "chlorophyll_a_btl_woceqc",
               "chlorophyll_a_ug_kg_btl",
               "chlorophyll_a_ug_kg_btl_woceqc",
               "ctd_beamcp_ctd",
               "ctd_beamcp_ctd_woceqc",
               "ctd_fluor_arbitrary_ctd",
               "ctd_fluor_ctd",
               "ctd_fluor_ctd_woceqc",
               "ctd_fluor_raw_btl",
               "ctd_fluor_raw_btl_woceqc",
               "ctd_fluor_raw_ctd",
               "ctd_fluor_raw_ctd_woceqc",
               "ctd_number_of_observations_ctd",
               "ctd_pressure_raw_btl",
               "ctd_temperature_unk_ctd",
               "ctd_temperature_unk_ctd_woceqc",
               "ctd_transmissometer_ctd",
               "ctd_transmissometer_ctd_woceqc",
               "ctd_transmissometer_raw_btl",
               "ctd_transmissometer_raw_btl_woceqc",
               "ctd_transmissometer_raw_ctd",
               "ctd_transmissometer_raw_ctd_woceqc",
               "del_carbon_13_dic_btl",
               "del_carbon_13_dic_btl_woceqc",
               "del_carbon_14_dic_btl",
               "del_carbon_14_dic_btl_woceqc",
               "del_carbon_14_dic_error_btl",
               "del_oxygen_18_btl",
               "del_oxygen_18_btl_woceqc",
               "del_oxygen_18_error_btl",
               "delta_helium_3_btl",
               "delta_helium_3_btl_woceqc",
               "delta_helium_3_error_btl",
               "dissolved_organic_carbon_btl",
               "dissolved_organic_carbon_btl_woceqc",
               "dissolved_organic_nitrogen_btl",
               "dissolved_organic_nitrogen_btl_woceqc",
               "doxy_btl",
               "doxy_btl_woceqc",
               "doxy_ctd",
               "doxy_ctd_woceqc",
               "fco2_btl",
               "fco2_btl_woceqc",
               "fco2_temperature_btl",
               "helium_btl",
               "helium_btl_woceqc",
               "helium_error_btl",
               "hplc_placeholder_btl_woceqc",
               "methyl_chloroform_btl",
               "methyl_chloroform_btl_woceqc",
               "neon_btl",
               "neon_btl_woceqc",
               "neon_error_btl",
               "nitrate_btl",
               "nitrate_btl_woceqc",
               "nitrite_btl",
               "nitrite_btl_woceqc",
               "nitrite_nitrate_btl",
               "nitrite_nitrate_btl_woceqc",
               "nitrous_oxide_btl",
               "nitrous_oxide_btl_woceqc",
               "oxygen_btl",
               "oxygen_btl_woceqc",
               "oxygen_ml_l_btl",
               "oxygen_ml_l_btl_woceqc",
               "par_ctd",
               "par_ctd_woceqc",
               "partial_co2_temperature_btl",
               "partial_pressure_of_co2_btl",
               "partial_pressure_of_co2_btl_woceqc",
               "particulate_organic_carbon_btl",
               "particulate_organic_carbon_btl_woceqc",
               "particulate_organic_nitrogen_btl",
               "particulate_organic_nitrogen_btl_woceqc",
               "ph_sws_btl",
               "ph_sws_btl_woceqc",
               "ph_temperature_btl",
               "ph_total_h_scale_btl",
               "ph_total_h_scale_btl_woceqc",
               "phaeophytin_btl",
               "phaeophytin_btl_woceqc",
               "phaeophytin_ug_l_btl",
               "phaeophytin_ug_l_btl_woceqc",
               "phosphate_btl",
               "phosphate_btl_woceqc",
               "potential_temperature_68_btl",
               "potential_temperature_c_btl",
               "pres",
               "psal_btl",
               "psal_btl_woceqc",
               "psal_ctd",
               "psal_ctd_woceqc",
               "radium_226_btl",
               "radium_226_btl_woceqc",
               "radium_228_btl",
               "radium_228_btl_woceqc",
               "ref_temperature_btl",
               "ref_temperature_btl_woceqc",
               "ref_temperature_c_btl",
               "ref_temperature_c_btl_woceqc",
               "rev_pressure_btl",
               "rev_pressure_btl_woceqc",
               "rev_temperature_90_btl",
               "rev_temperature_90_btl_woceqc",
               "rev_temperature_btl",
               "rev_temperature_btl_woceqc",
               "rev_temperature_c_btl",
               "rev_temperature_c_btl_woceqc",
               "salinity_btl",
               "salinity_btl_woceqc",
               "sample_btl",
               "sample_ctd",
               "silicate_btl",
               "silicate_btl_woceqc",
               "sulfur_hexifluoride_btl",
               "sulfur_hexifluoride_btl_woceqc",
               "temperature_btl",
               "temperature_btl_woceqc",
               "temperature_ctd",
               "temperature_ctd_woceqc",
               "total_alkalinity_btl",
               "total_alkalinity_btl_woceqc",
               "total_carbon_btl",
               "total_carbon_btl_woceqc",
               "total_dissolved_nitrogen_btl",
               "total_dissolved_nitrogen_btl_woceqc",
               "tritium_btl",
               "tritium_btl_woceqc",
               "tritium_error_btl",
               "~ammonium_btl",
               "~ammonium_btl_woceqc",
               "~bottle_latitude_btl",
               "~bottle_longitude_btl",
               "~bottle_number_btl",
               "~bottle_number_btl_woceqc",
               "~bottle_time_btl",
               "~carbon_tetrachloride_btl",
               "~carbon_tetrachloride_btl_woceqc",
               "~cfc_113_btl",
               "~cfc_113_btl_woceqc",
               "~cfc_11_btl",
               "~cfc_11_btl_woceqc",
               "~cfc_12_btl",
               "~cfc_12_btl_woceqc",
               "~chlorophyll_a_btl",
               "~chlorophyll_a_btl_woceqc",
               "~chlorophyll_a_ug_kg_btl",
               "~chlorophyll_a_ug_kg_btl_woceqc",
               "~ctd_beamcp_ctd",
               "~ctd_beamcp_ctd_woceqc",
               "~ctd_fluor_arbitrary_ctd",
               "~ctd_fluor_ctd",
               "~ctd_fluor_ctd_woceqc",
               "~ctd_fluor_raw_btl",
               "~ctd_fluor_raw_btl_woceqc",
               "~ctd_fluor_raw_ctd",
               "~ctd_fluor_raw_ctd_woceqc",
               "~ctd_number_of_observations_ctd",
               "~ctd_pressure_raw_btl",
               "~ctd_temperature_unk_ctd",
               "~ctd_temperature_unk_ctd_woceqc",
               "~ctd_transmissometer_ctd",
               "~ctd_transmissometer_ctd_woceqc",
               "~ctd_transmissometer_raw_btl",
               "~ctd_transmissometer_raw_btl_woceqc",
               "~ctd_transmissometer_raw_ctd",
               "~ctd_transmissometer_raw_ctd_woceqc",
               "~del_carbon_13_dic_btl",
               "~del_carbon_13_dic_btl_woceqc",
               "~del_carbon_14_dic_btl",
               "~del_carbon_14_dic_btl_woceqc",
               "~del_carbon_14_dic_error_btl",
               "~del_oxygen_18_btl",
               "~del_oxygen_18_btl_woceqc",
               "~del_oxygen_18_error_btl",
               "~delta_helium_3_btl",
               "~delta_helium_3_btl_woceqc",
               "~delta_helium_3_error_btl",
               "~dissolved_organic_carbon_btl",
               "~dissolved_organic_carbon_btl_woceqc",
               "~dissolved_organic_nitrogen_btl",
               "~dissolved_organic_nitrogen_btl_woceqc",
               "~doxy_btl",
               "~doxy_btl_woceqc",
               "~doxy_ctd",
               "~doxy_ctd_woceqc",
               "~fco2_btl",
               "~fco2_btl_woceqc",
               "~fco2_temperature_btl",
               "~helium_btl",
               "~helium_btl_woceqc",
               "~helium_error_btl",
               "~hplc_placeholder_btl_woceqc",
               "~methyl_chloroform_btl",
               "~methyl_chloroform_btl_woceqc",
               "~neon_btl",
               "~neon_btl_woceqc",
               "~neon_error_btl",
               "~nitrate_btl",
               "~nitrate_btl_woceqc",
               "~nitrite_btl",
               "~nitrite_btl_woceqc",
               "~nitrite_nitrate_btl",
               "~nitrite_nitrate_btl_woceqc",
               "~nitrous_oxide_btl",
               "~nitrous_oxide_btl_woceqc",
               "~oxygen_btl",
               "~oxygen_btl_woceqc",
               "~oxygen_ml_l_btl",
               "~oxygen_ml_l_btl_woceqc",
               "~par_ctd",
               "~par_ctd_woceqc",
               "~partial_co2_temperature_btl",
               "~partial_pressure_of_co2_btl",
               "~partial_pressure_of_co2_btl_woceqc",
               "~particulate_organic_carbon_btl",
               "~particulate_organic_carbon_btl_woceqc",
               "~particulate_organic_nitrogen_btl",
               "~particulate_organic_nitrogen_btl_woceqc",
               "~ph_sws_btl",
               "~ph_sws_btl_woceqc",
               "~ph_temperature_btl",
               "~ph_total_h_scale_btl",
               "~ph_total_h_scale_btl_woceqc",
               "~phaeophytin_btl",
               "~phaeophytin_btl_woceqc",
               "~phaeophytin_ug_l_btl",
               "~phaeophytin_ug_l_btl_woceqc",
               "~phosphate_btl",
               "~phosphate_btl_woceqc",
               "~potential_temperature_68_btl",
               "~potential_temperature_c_btl",
               "~pres",
               "~psal_btl",
               "~psal_btl_woceqc",
               "~psal_ctd",
               "~psal_ctd_woceqc",
               "~radium_226_btl",
               "~radium_226_btl_woceqc",
               "~radium_228_btl",
               "~radium_228_btl_woceqc",
               "~ref_temperature_btl",
               "~ref_temperature_btl_woceqc",
               "~ref_temperature_c_btl",
               "~ref_temperature_c_btl_woceqc",
               "~rev_pressure_btl",
               "~rev_pressure_btl_woceqc",
               "~rev_temperature_90_btl",
               "~rev_temperature_90_btl_woceqc",
               "~rev_temperature_btl",
               "~rev_temperature_btl_woceqc",
               "~rev_temperature_c_btl",
               "~rev_temperature_c_btl_woceqc",
               "~salinity_btl",
               "~salinity_btl_woceqc",
               "~sample_btl",
               "~sample_ctd",
               "~silicate_btl",
               "~silicate_btl_woceqc",
               "~sulfur_hexifluoride_btl",
               "~sulfur_hexifluoride_btl_woceqc",
               "~temperature_btl",
               "~temperature_btl_woceqc",
               "~temperature_ctd",
               "~temperature_ctd_woceqc",
               "~total_alkalinity_btl",
               "~total_alkalinity_btl_woceqc",
               "~total_carbon_btl",
               "~total_carbon_btl_woceqc",
               "~total_dissolved_nitrogen_btl",
               "~total_dissolved_nitrogen_btl_woceqc",
               "~tritium_btl",
               "~tritium_btl_woceqc",
               "~tritium_error_btl"
            ]
         },
         "platformMeta": {
            "type": "object",
            "properties": {
               "_id": {
                  "anyOf": [ {"type": "string"}, {"type": "number"}]
               },
               "platform_number": {
                  "anyOf": [ {"type": "string"}, {"type": "number"}]
               },
               "most_recent_date": {
                  "type": "string",
                  "format": "date-time"
               },
               "most_recent_date_added": {
                  "type": "string",
                  "format": "date-time"
               },
               "number_of_profiles": {
                  "type": "integer"
               },
               "POSITIONING_SYSTEM": {
                  "type": "string"
               },
               "PI_NAME": {
                  "type": "string"
               },
               "dac": {
                  "type": "string"
               }
            }
         },
         "platformRecent": {
            "type": "object",
            "properties": {
               "_id": {
                  "anyOf": [ {"type": "string"}, {"type": "number"}]
               },
               "platform_number": {
                  "anyOf": [ {"type": "string"}, {"type": "number"}]
               },
               "most_recent_date": {
                  "type": "string",
                  "format": "date-time"
               },
               "number_of_profiles": {
                  "type": "integer"
               },
               "cycle_number": {
                  "type": "integer"
               },
               "geolocation": {
                  "$ref": "#/components/schemas/geoJSONpoint"
               },
               "dac": {
                  "type": "string"
               }
            }
         },
         "dacStub": {
            "type": "object",
            "properties": {
               "_id": {
                  "type": "string"
               },
               "number_of_profiles": {
                  "type": "integer"
               },
               "most_recent_date": {
                  "type": "string",
                  "format": "date-time"
               },
               "dac": {
                  "type": "string"
               }
            }
         },
         "profileCollectionSummary": {
            "type": "object",
            "properties": {
               "numberOfProfiles": {
                  "type": "integer"
               },
               "dacs": {
                  "type": "array",
                  "items": {
                     "type": "string"
                  }
               },
               "numberDeep": {
                  "type": "integer"
               },
               "numberBgc": {
                  "type": "integer"
               },
               "lastAdded": {
                  "type": "string",
                  "format": "date-time"
               }
            }
         },
         "geoJSONpoint": {
            "type": "object",
            "required": ["type", "coordinates"],
            "properties": {
               "type": {
                  "type": "string"
               },
               "coordinates": {
                  "type": "array",
                  "items": {
                     "type": "number",
                     "minItems": 2,
                     "maxItems": 2
                  }
               }
            }
         },
         "geoJSONpolygon": {
            "type": "object",
            "properties": {
               "type": {
                  "type": "string"
               },
               "coordinates": {
                  "type": "array",
                  "items": {
                     "type": "array",
                     "items": {
                        "type": "number",
                        "minItems": 2,
                        "maxItems": 2
                     }
                  }
               }
            }
         },
         "profile_source_info": {
            "type": "object",
            "required": ["source"],
            "properties": {
               "data_keys_source": {
                  "type": "array",
                  "items": {
                     "type": "string"
                  }
               },
               "source": {
                  "type": "array",
                  "items": {
                     "type": "string"
                  }
               },
               "source_url": {
                  "type": "string"
               },
               "date_updated_source": {
                  "type": "string",
                  "format": "date-time"
               }
            }
         },
         "errorResponse": {
            "type": "object",
            "required": [
               "code",
               "message"
            ],
            "properties": {
               "code": {
                  "type": "integer"
               },
               "message": {
                  "type": "string"
               }
            }
         }
      },
      "parameters": {
         "arDate": {
            "in": "query",
            "name": "date",
            "required": false,
            "description": "three hour increments starting at 2004-01-01T00:00:00 and ending at 2017-04-02T03:00:00",
            "allowReserved": true,
            "schema": {
               "type": "string",
               "format": "date-time",
               "example": "2010-01-01T00:00:00Z"
            }
         },
         "arID": {
            "in": "query",
            "name": "_id",
            "required": false,
            "description": "ID of an atmospheric river object",
            "schema": {
               "type": "string",
               "example": "1_262992"
            }
         },
         "date": {
            "in": "query",
            "name": "date",
            "required": true,
            "description": "date-time formatted string",
            "allowReserved": true,
            "schema": {
               "type": "string",
               "format": "date-time",
               "example": "2010-01-01T00:00:00Z"
            }
         },
         "startDate": {
            "in": "query",
            "name": "startDate",
            "description": "ISO 8601 UTC date-time formatted string indicating the beginning of the time period of interest.",
            "allowReserved": true,
            "schema": {
               "type": "string",
               "format": "date-time",
               "example": "2010-01-01T00:00:00Z"
            }
         },
         "endDate": {
            "in": "query",
            "name": "endDate",
            "description": "ISO 8601 UTC date-time formatted string indicating the end of the time period of interest.",
            "allowReserved": true,
            "schema": {
               "type": "string",
               "format": "date-time",
               "example": "2010-01-01T00:00:00Z"
            }
         },
         "gridName": {
            "in": "query",
            "name": "gridName",
            "required": true,
            "description": "name of the gridded product to query.",
            "schema": {
               "type": "string",
               "example": "rgTempTotal"
            }
         },
         "presRange": {
            "in": "query",
            "name": "presRange",
            "description": "Pressure range in dbar to filter for; levels outside this range will not be returned.",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
               "type": "array",
               "items": {
                  "type": "number",
                  "minItems": 2,
                  "maxItems": 2
               },
               "example": "10,20.1"
            }
         },
         "dac": {
            "in": "query",
            "name": "dac",
            "description": "Data Assembly Center to search for. See /profiles/vocabulary?parameter=dac for list of options.",
            "schema": {
               "type": "string",
               "example": "KO"
            }
         },
         "profileSource": {
            "in": "query",
            "name": "source",
            "description": "Experimental program source(s) to search for; document must match all sources to be returned. Accepts ~ negation to filter out documents. See /profiles/vocabulary?parameter=source for list of options.",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
               "type": "array",
               "items": {
                  "type": "string"
               },
               "example": "argo_bgc,~argo_core"
            }
         },
         "woceline": {
            "in": "query",
            "name": "woceline",
            "description": "WOCE line to search for. See /profiles/vocabulary?parameter=woceline for list of options.",
            "schema": {
               "type": "string",
               "example": "A10"
            } 
         },
         "compression": {
            "in": "query",
            "name": "compression",
            "description": "Data compression strategy to apply.",
            "schema": {
               "type": "string",
               "example": "basic-minification"
            }
         },
         "profileID": {
            "in": "query",
            "name": "id",
            "description": "Unique profile ID to search for.",
            "schema": {
               "type": "string",
               "example": "4902911_0"
            }
         },
         "profilePlatform": {
            "in": "query",
            "name": "platform",
            "description": "Unique platform ID to search for.",
            "schema": {
               "type": "string",
               "example": "4902911"
            }
         },
         "platformList": {
            "in": "query",
            "name": "platforms",
            "description": "List of platform IDs",
            "required": true,
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
               "type": "array",
               "items": {
                  "anyOf": [ {"type": "string"}, {"type": "number"}]
               },
               "example": "4902911,4902912"
            }
         },
         "polygon": {
            "in": "query",
            "name": "polygon",
            "description": "array of [lon, lat] vertices describing a polygon bounding the region of interest; final point must match initial point",
            "allowReserved": true,
            "schema": {
               "type": "string",
               "example": "[[-74.1,40.5],[-73.7,40.5],[-74.0,40.8],[-74.1,40.5]]"
            }
         },
         "multipolygon": {
            "in": "query",
            "name": "multipolygon",
            "description": "array of polygon regions; region of interest is taken as the intersection of all listed polygons.",
            "allowReserved": true,
            "schema": {
               "type": "string",
               "example": "[[[0,0],[0,1],[1,1],[1,0],[0,0]],[[0.5,0],[0.5,1],[1.5,1],[1.5,0],[0.5,0]]]"
            }
         },
         "box": {
            "in": "query",
            "name": "box",
            "description": "box region of interest described as [[lower left lon, lower left lat], [upper right lon, upper right lat]]",
            "allowReserved": true,
            "schema": {
               "type": "string",
               "example": "[[-74.2,40.5],[-73.6,40.9]]"
            }
         },
         "center": {
            "in": "query",
            "name": "center",
            "description": "center to measure max radius from when defining circular region of interest; must be used in conjunction with query string parameter 'radius'.",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
               "type": "array",
               "items": {
                  "type": "number",
                  "minItems": 2,
                  "maxItems": 2
               },
               "example": "10,20.1"
            }
         },
         "radius": {
            "in": "query",
            "name": "radius",
            "description": "km from centerpoint when defining circular region of interest; must be used in conjunction with query string parameter 'center'.",
            "schema": {
               "type": "number",
               "example": 50
            }
         },
         "data": {
            "in": "query",
            "name": "data",
            "description": "Keys of data to include. Return only documents that have all data requested, within the pressure range if specified. Accepts ~ negation to filter out documents including the specified data. Omission of this parameter will result in metadata only responses. See /profiles/vocabulary?parameter=data for possible values.",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
               "type": "array",
               "items": {
                  "$ref": "#/components/schemas/dataKey"
               },
               "example": "pres,doxy,~psal"
            }
         },
         "platform": {
            "in": "query",
            "name": "platform",
            "required": true,
            "description": "platform ID",
            "schema": {
               "anyOf": [ {"type": "string"}, {"type": "number"}],
               "example": "4902911"
            }
         },
         "lat": {
            "in": "query",
            "name": "lat",
            "required": true,
            "description": "latitude (degrees) of Argo float location",
            "schema": {
               "type": "number",
               "minimum": -90,
               "maximum": 90,
               "example": 5.25
            }
         },
         "lon": {
            "in": "query",
            "name": "lon",
            "required": true,
            "description": "longitude (degrees) of Argo float location",
            "schema": {
               "type": "number",
               "minimum": -180,
               "maximum": 180,
               "example": -20.33
            }
         },
         "forcastDays": {
            "in": "query",
            "name": "forcastDays",
            "required": true,
            "description": "number of days over which to project Argo float drift",
            "schema": {
               "type": "number",
               "minimum": 60,
               "maximum": 1800,
               "example": 60,
               "enum": [
                  60,
                  120,
                  140,
                  240,
                  360,
                  480,
                  720,
                  840,
                  960,
                  1080,
                  1200,
                  1320,
                  1440,
                  1560,
                  1680,
                  1800
               ]
            }
         }
      },
      "responses": {
         "badRequest": {
            "description": "Bad Request",
            "content": {
               "application/json": {
                  "schema": {
                     "$ref": "#/components/schemas/errorResponse"
                  }
               }
            }
         },
         "notFound": {
            "description": "Not Found",
            "content": {
               "application/json": {
                  "schema": {
                     "$ref": "#/components/schemas/errorResponse"
                  }
               }
            }
         },
         "serverError": {
            "description": "Server Error",
            "content": {
               "application/json": {
                  "schema": {
                     "$ref": "#/components/schemas/errorResponse"
                  }
               }
            }
         }
      }
   }
}